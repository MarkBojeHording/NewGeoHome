[1mdiff --git a/README.md b/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..28867b7[m
[1m--- /dev/null[m
[1m+++ b/README.md[m
[36m@@ -0,0 +1,200 @@[m
[32m+[m[32m# GeoHome + ServerBeacon Integration[m
[32m+[m
[32m+[m[32mA comprehensive tactical mapping and server monitoring system for Rust game servers, combining GeoHome's tactical map interface with ServerBeacon's server management capabilities.[m
[32m+[m
[32m+[m[32m## 🎯 Project Overview[m
[32m+[m
[32m+[m[32m**GeoHome** serves as the user-facing tactical map interface where players can:[m
[32m+[m[32m- Mark and track enemy/friendly bases[m
[32m+[m[32m- Create detailed reports and task assignments[m
[32m+[m[32m- Monitor player activity and base status[m
[32m+[m[32m- Use advanced features like heat maps and decay timers[m
[32m+[m
[32m+[m[32m**ServerBeacon** provides the admin backend for:[m
[32m+[m[32m- Monitoring multiple Rust servers via BattleMetrics API[m
[32m+[m[32m- Real-time player tracking and activity monitoring[m
[32m+[m[32m- Server status management and configuration[m
[32m+[m[32m- Multi-tenant support for up to 1,000 users[m
[32m+[m
[32m+[m[32m## 🚀 Features[m
[32m+[m
[32m+[m[32m### Tactical Map (GeoHome)[m
[32m+[m[32m- **Interactive Grid System**: 26x26 coordinate grid with base markers[m
[32m+[m[32m- **Base Management**: Add, edit, and categorize enemy/friendly bases[m
[32m+[m[32m- **Report System**: Create detailed reports with screenshots and notes[m
[32m+[m[32m- **Task Management**: Assign and track pickup, repair, and resource tasks[m
[32m+[m[32m- **Player Tracking**: Monitor online/offline player counts per base[m
[32m+[m[32m- **Heat Maps**: Visual activity overlays with configurable radius and intensity[m
[32m+[m[32m- **Decay Timers**: Track base decay with automatic countdown timers[m
[32m+[m[32m- **Group Coordination**: Link subordinate bases to main bases[m
[32m+[m
[32m+[m[32m### Server Monitoring (ServerBeacon)[m
[32m+[m[32m- **Multi-Server Support**: Monitor unlimited Rust servers[m
[32m+[m[32m- **Real-time Updates**: WebSocket-based live data streaming[m
[32m+[m[32m- **Player Activity Tracking**: Monitor player sessions and movements[m
[32m+[m[32m- **BattleMetrics Integration**: Direct API integration for server data[m
[32m+[m[32m- **Admin Interface**: Web-based server management dashboard[m
[32m+[m
[32m+[m[32m## 🏗️ Architecture[m
[32m+[m
[32m+[m[32m```[m
[32m+[m[32m┌─────────────────┐    ┌──────────────────┐    ┌─────────────────┐[m
[32m+[m[32m│   GeoHome       │    │   ServerBeacon   │    │   BattleMetrics │[m
[32m+[m[32m│   Frontend      │◄──►│   Backend        │◄──►│   API           │[m
[32m+[m[32m│   (React/TS)    │    │   (Express/TS)   │    │   (External)    │[m
[32m+[m[32m└─────────────────┘    └──────────────────┘    └─────────────────┘[m
[32m+[m[32m         │                       │[m
[32m+[m[32m         │                       │[m
[32m+[m[32m         ▼                       ▼[m
[32m+[m[32m┌─────────────────┐    ┌──────────────────┐[m
[32m+[m[32m│   PostgreSQL    │    │   WebSocket      │[m
[32m+[m[32m│   Database      │    │   Manager        │[m
[32m+[m[32m└─────────────────┘    └──────────────────┘[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## 🛠️ Tech Stack[m
[32m+[m
[32m+[m[32m- **Frontend**: React 18 + TypeScript + Tailwind CSS[m
[32m+[m[32m- **Backend**: Express.js + TypeScript + Node.js[m
[32m+[m[32m- **Database**: PostgreSQL + Drizzle ORM[m
[32m+[m[32m- **State Management**: TanStack Query (React Query)[m
[32m+[m[32m- **Real-time**: WebSockets + BattleMetrics API[m
[32m+[m[32m- **Build Tools**: Vite + ESBuild[m
[32m+[m[32m- **Authentication**: Session-based with PostgreSQL storage[m
[32m+[m
[32m+[m[32m## 📦 Installation[m
[32m+[m
[32m+[m[32m### Prerequisites[m
[32m+[m[32m- Node.js 20+[m[41m [m
[32m+[m[32m- PostgreSQL 14+[m
[32m+[m[32m- BattleMetrics API key[m
[32m+[m
[32m+[m[32m### Setup[m
[32m+[m[32m1. **Clone the repository**[m
[32m+[m[32m   ```bash[m
[32m+[m[32m   git clone https://github.com/MarkBojeHording/GeoHome.git[m
[32m+[m[32m   cd GeoHome[m
[32m+[m[32m   ```[m
[32m+[m
[32m+[m[32m2. **Install dependencies**[m
[32m+[m[32m   ```bash[m
[32m+[m[32m   npm install[m
[32m+[m[32m   ```[m
[32m+[m
[32m+[m[32m3. **Environment configuration**[m
[32m+[m[32m   ```bash[m
[32m+[m[32m   cp ENV_EXAMPLE.txt .env[m
[32m+[m[32m   # Edit .env with your configuration[m
[32m+[m[32m   ```[m
[32m+[m
[32m+[m[32m4. **Database setup**[m
[32m+[m[32m   ```bash[m
[32m+[m[32m   npm run db:push[m
[32m+[m[32m   npm run db:seed[m
[32m+[m[32m   ```[m
[32m+[m
[32m+[m[32m5. **Start development servers**[m
[32m+[m[32m   ```bash[m
[32m+[m[32m   # Terminal 1: Start backend[m
[32m+[m[32m   npm run start:server[m
[32m+[m[41m   [m
[32m+[m[32m   # Terminal 2: Start frontend[m
[32m+[m[32m   npm run dev[m
[32m+[m[32m   ```[m
[32m+[m
[32m+[m[32m## 🔧 Configuration[m
[32m+[m
[32m+[m[32m### Environment Variables[m
[32m+[m[32m```env[m
[32m+[m[32m# Database[m
[32m+[m[32mDATABASE_URL=postgresql://user:password@localhost:5432/geohome[m
[32m+[m
[32m+[m[32m# BattleMetrics API[m
[32m+[m[32mBATTLEMETRICS_API_KEY=your_api_key_here[m
[32m+[m
[32m+[m[32m# Server Configuration[m
[32m+[m[32mPORT=3002[m
[32m+[m[32mNODE_ENV=development[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## 🚀 Deployment[m
[32m+[m
[32m+[m[32m### Replit Deployment[m
[32m+[m[32mThe project is configured for easy deployment on Replit:[m
[32m+[m[32m- Automatic environment detection[m
[32m+[m[32m- Built-in PostgreSQL support[m
[32m+[m[32m- WebSocket compatibility[m
[32m+[m[32m- Production-ready build scripts[m
[32m+[m
[32m+[m[32m### Production Deployment[m
[32m+[m[32m```bash[m
[32m+[m[32m# Build the application[m
[32m+[m[32mnpm run build[m
[32m+[m
[32m+[m[32m# Start production server[m
[32m+[m[32mnpm start[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## 📱 Usage[m
[32m+[m
[32m+[m[32m### For Players (GeoHome)[m
[32m+[m[32m1. **Access the tactical map** at `http://localhost:3000`[m
[32m+[m[32m2. **Add bases** by right-clicking on the map[m
[32m+[m[32m3. **Create reports** for enemy encounters and base activities[m
[32m+[m[32m4. **Assign tasks** for resource collection and base maintenance[m
[32m+[m[32m5. **Monitor player activity** with real-time updates[m
[32m+[m
[32m+[m[32m### For Admins (ServerBeacon)[m
[32m+[m[32m1. **Access admin panel** at `http://localhost:3000/admin`[m
[32m+[m[32m2. **Add servers** to monitor via BattleMetrics[m
[32m+[m[32m3. **Configure monitoring** parameters and alerts[m
[32m+[m[32m4. **View real-time data** from all monitored servers[m
[32m+[m[32m5. **Manage player tracking** and activity monitoring[m
[32m+[m
[32m+[m[32m## 🔒 Security Features[m
[32m+[m
[32m+[m[32m- **Session Management**: Secure PostgreSQL-based sessions[m
[32m+[m[32m- **Input Validation**: Comprehensive data validation and sanitization[m
[32m+[m[32m- **API Rate Limiting**: Built-in protection against abuse[m
[32m+[m[32m- **Multi-tenancy**: Isolated data access per group[m
[32m+[m[32m- **Environment Isolation**: Secure configuration management[m
[32m+[m
[32m+[m[32m## 📊 Performance[m
[32m+[m
[32m+[m[32m- **Real-time Updates**: WebSocket-based live data streaming[m
[32m+[m[32m- **Efficient Queries**: Optimized database queries with proper indexing[m
[32m+[m[32m- **Caching**: React Query for intelligent data caching[m
[32m+[m[32m- **Lazy Loading**: Component-based code splitting[m
[32m+[m[32m- **Optimized Builds**: Vite-based fast development and production builds[m
[32m+[m
[32m+[m[32m## 🤝 Contributing[m
[32m+[m
[32m+[m[32m1. Fork the repository[m
[32m+[m[32m2. Create a feature branch (`git checkout -b feature/amazing-feature`)[m
[32m+[m[32m3. Commit your changes (`git commit -m 'Add amazing feature'`)[m
[32m+[m[32m4. Push to the branch (`git push origin feature/amazing-feature`)[m
[32m+[m[32m5. Open a Pull Request[m
[32m+[m
[32m+[m[32m## 📄 License[m
[32m+[m
[32m+[m[32mThis project is licensed under the MIT License.[m
[32m+[m
[32m+[m[32m## 🆘 Support[m
[32m+[m
[32m+[m[32mFor support and questions:[m
[32m+[m[32m- Create an issue on GitHub[m
[32m+[m[32m- Check the documentation in the `/docs` folder[m
[32m+[m[32m- Review the component interaction guide in `COMPONENT_INTERACTIONS.md`[m
[32m+[m
[32m+[m[32m## 🔮 Roadmap[m
[32m+[m
[32m+[m[32m- [ ] Enhanced player profiling system[m
[32m+[m[32m- [ ] Advanced analytics and reporting[m
[32m+[m[32m- [ ] Mobile-responsive design improvements[m
[32m+[m[32m- [ ] Additional game server support[m
[32m+[m[32m- [ ] Real-time collaboration features[m
[32m+[m[32m- [ ] Advanced permission system[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m**Built with ❤️ for the Rust gaming community**[m
